function init(self)
	msg.post(".", "acquire_input_focus")
	self.velocity = vmath.vector3()             -- [1]
	self.input = vmath.vector3()
	self.mouse = false
	self.dest = vmath.vector3()
	cap = 200
	self.acel = 200
end

function update(self, dt)
	dis = 1000;
	self.dest = self.dest
	if vmath.length_sqr(self.input) > 1 then
		self.input = vmath.normalize(self.input)
	end
	local p = go.get_position()
	if self.mouse then
		self.dest = self.dest
		self.mouse = self.mouse
		if self.dest.x  > p.x then 
			self.input.x = 1;
		end
		if self.dest.x  < p.x then 
			self.input.x = -1;
		end
		if self.dest.y  > p.y then 
			self.input.y = 1;
		end
		if self.dest.y  < p.y then 
			self.input.y = -1;
		end
		dis = math.sqrt((self.dest.x - p.x) ^2 + (self.dest.y-p.y)^2)
		
		
		
	end
	local acceleration = self.input * self.acel       -- [2]
	local dv = acceleration * dt                -- [3]
	local v0 = self.velocity    
	local v1 = self.velocity + dv                -- [4]
	local movement = (v0 + v1) * dt * 0.5       -- [6]
	
	
	
	go.set_position(p + movement)   
	v1=checkCap(v1, cap)
	
	self.velocity = v1                          -- [8]
	self.input = vmath.vector3()
	self.acel  = 200
end

function checkColide(vel, pos)
	if pos.x <50 then
		vel.x = (-1*vel.x)*500
	end
	return vel; 
end


function checkCap(vel, cap)
	if vel.x > cap then
		vel.x=cap
	end
	
	if vel.x < (cap*(-1)) then
	vel.x=-1*cap
end

	if vel.y > cap then
	vel.y=cap
end

	if vel.y < (-1)*cap then
	vel.y=-1*cap
end

	return vel
end
function on_input(self, action_id, action)
	
	if action_id == hash("up") then
		self.input.y = 1           
		self.mouse = false          -- [1]
	elseif action_id == hash("down") then
		self.input.y = -1    
		self.mouse = false                -- [1]
	elseif action_id == hash("left") then
		self.input.x = -1  
		self.mouse = false                  -- [1]
	elseif action_id == hash("right") then
		self.input.x = 1   
		self.mouse = false 
	elseif action_id == hash("click") and action.pressed then
		self.mouse = true
		self.dest.x = action.x; 
		self.dest.y = action.y; 
	end
end
